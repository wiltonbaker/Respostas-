 Observe o trecho de código abaixo: int INDICE = 13, SOMA = 0, K = 0;
Enquanto K < INDICE faça { K = K + 1; SOMA = SOMA + K; }
Imprimir(SOMA);
Ao final do processamento, qual será o valor da variável SOMA?

int INDICE = 13, SOMA = 0, K = 0;

while (K < INDICE) {
    K = K + 
    K = K +

    K = K

    K =

   
1;
    SOMA = SOMA + K;
}


    SOMA = SOMA + K

    SOMA = SOMA +

    SOMA = SOMA

    SOMA =

   
printf("%d", SOMA);

``
"Código em Python"

 "Dado a sequência de Fibonacci, onde se inicia por 0 e 1 e o próximo valor sempre será a soma dos 2 valores anteriores (exemplo: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34...), escreva um programa na linguagem que desejar onde, informado um número, ele calcule a sequência de Fibonacci e retorne uma mensagem avisando se o número informado pertence ou não a sequência."

def fibonacci(n):
    a, b = 0, 1
    while a <= n:
        
       
if a == n:
            return f"{n} pertence à sequência de Fibonacci."
        a, b = b, a + b
    
        a, b = b, a + b

        a, b = b

        a,
return f"{n} não pertence à sequência de Fibonacci."

numero = 

int(input("Informe um número: "))
print(fibonacci(numero))

``
 Dado um vetor que guarda o valor de faturamento diário de uma distribuidora, faça um programa, na linguagem que desejar, que calcule e retorne:
• O menor valor de faturamento ocorrido em um dia do mês;
• O maior valor de faturamento ocorrido em um dia do mês;
• Número de dias no mês em que o valor de faturamento diário foi superior à média mensal.

IMPORTANTE:
a) Usar o json ou xml disponível como fonte dos dados do faturamento mensal;
b) Podem existir dias sem faturamento, como nos finais de semana e feriados. Estes dias devem ser ignorados no cálculo da média;

import json

# Exemplo de dados de faturamento em formato JSON
faturamento_json = 
faturamento_json = 

faturament

fatur
'''
{
    "faturamento_diario": [1200.50, 0, 870.30, 960.40, 0, 0, 1050.70, 0, 1350.80, 1100.10]
}
'''

dados = json.loads(faturamento_json)
faturamento = [f 

dados = json.loads(faturamento_json)
faturamento = [


dados = json.loads(faturamento_json)
fatur


dados = json.loads(faturamento_json


dados = json.loads(faturamento


dados = json


dados =


dados
for f in dados["faturamento_diario"] if f > 0]

# Calculando o menor, maior valor e a média
menor_valor = 
menor_val

men
min(faturamento)
maior_valor = 
maior_val
max(faturamento)
media_mensal = 
media_mensal =

media_m
sum(faturamento) / len(faturamento)

# Número de dias com faturamento acima da média
dias_acima_media = 
dias_acima_media = s

dias_acima_media

dias_acima_me

dias_acima

dias_a

dia
sum(1 for f in faturamento if f > media_mensal)



prin
"Código em Python (com JSON como exemplo)"


p
print(f"Menor valor: {menor_valor}")
print(f"Maior valor: {maior_valor}")
print(f"Dias acima da média: {dias_acima_media}")


) Dado o valor de faturamento mensal de uma distribuidora, detalhado por estado:
• SP – R$67.836,43
• RJ – R$36.678,66
• MG – R$29.229,88
• ES – R$27.165,48
• Outros – R$19.849,53

Escreva um programa na linguagem que desejar onde calcule o percentual de representação que cada estado teve dentro do valor total mensal da distribuidora.  


faturamento_estados = {
    "SP": 67836.43,
    "RJ": 36678.66,
    "MG": 29229.88,
    
   
"ES": 27165.48,
    "Outros": 19849.53
}

faturamento_total = 
}

faturamento_total =

}

faturamento
sum(faturamento_estados.values())

for estado, valor in faturamento_estados.items():
    percentual = (valor / faturamento_total) * 
    percentual = (valor / faturamento_tota

    percentual = (valor / faturamento_

    percentual = (valor / faturame

    percentual = (valor / fatu

    percentual = (valo

    percentual = (

    percentua

    perce
100
    
   
print(f"{estado}: {percentual:.2f}%")
"CODIGO PYTHON"

Escreva um programa que inverta os caracteres de um string.

IMPORTANTE:
a) Essa string pode ser informada através de qualquer entrada de sua preferência ou pode ser previamente definida no código;
b) Evite usar funções prontas, como, por exemplo, reverse;

def inverter_string(s):
    string_invertida = 
    string_invertida

    string

   
''
    
   
for i in range(len(s) - 1, -1, -1):
        string_invertida += s[i]
    
        string_invertida += s[i]
   

        string_invertida += s

        string_invert

       
return string_invertida

texto = 

texto
input("Informe uma string: ")
print("String invertida:", inverter_string(texto))

"CODIGO PYTHON"
